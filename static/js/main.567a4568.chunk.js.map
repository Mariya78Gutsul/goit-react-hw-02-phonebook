{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","s","list","map","contact","item","name","number","button","type","onClick","id","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","label","input","Component","App","filter","addContact","task","cont","includes","alert","length","nanoid","prevState","getVisibleContacts","toLowerCase","changeFilter","currentTarget","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.567a4568.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactForm_list__3svCq\",\"label\":\"ContactForm_label__1pjrl\",\"input\":\"ContactForm_input__3zJrl\",\"button\":\"ContactForm_button__2NBPW\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={s.list}>\n    {contacts.map((contact) => (\n      <li className={s.item} key={contact.id}>\n        {contact.name + \":\" + contact.number}\n        {\n          <button\n            className={s.button}\n            type=\"button\"\n            name=\"delte\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={s.list} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: nanoid,\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__srqd_\",\"item\":\"ContactList_item__1vIaq\",\"TaskList_text\":\"ContactList_TaskList_text__3Rs16\",\"button\":\"ContactList_button__3ekom\"};"],"sourceRoot":""}